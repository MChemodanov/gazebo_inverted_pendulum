<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from rrbot.xacro                    | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<!-- Revolute-Revolute Manipulator -->
<robot name="rrbot" xmlns:xacro="http://www.ros.org/wiki/xacro">
  <!-- Space btw top of beam and the each joint -->
  <!-- ros_control plugin -->
  <gazebo>
    <plugin filename="libgazebo_ros_control.so" name="gazebo_ros_control">
      <robotNamespace>/rrbot</robotNamespace>
      <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
    </plugin>
  </gazebo>
  <!-- Link1 -->
  <gazebo reference="link1">
    <material>Gazebo/Orange</material>
  </gazebo>
  <!-- Link2 -->
  <gazebo reference="link2">
    <mu1>0.2</mu1>
    <mu2>0.2</mu2>
    <material>Gazebo/Black</material>
  </gazebo>
  <!-- Link3 -->
  <gazebo reference="link3">
    <mu1>0.2</mu1>
    <mu2>0.2</mu2>
    <material>Gazebo/Orange</material>
  </gazebo>
  <!-- camera_link -->
  <gazebo reference="camera_link">
    <mu1>0.2</mu1>
    <mu2>0.2</mu2>
    <material>Gazebo/Red</material>
  </gazebo>
  <!-- hokuyo -->
  <gazebo reference="hokuyo_link">
    <sensor name="head_hokuyo_sensor" type="gpu_ray">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>40</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-1.570796</min_angle>
            <max_angle>1.570796</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.10</min>
          <max>30.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <!-- Noise parameters based on published spec for Hokuyo laser
               achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
               stddev of 0.01m will put 99.7% of samples within 0.03m of the true
               reading. -->
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin filename="libgazebo_ros_gpu_laser.so" name="gazebo_ros_head_hokuyo_controller">
        <topicName>/rrbot/laser/scan</topicName>
        <frameName>hokuyo_link</frameName>
      </plugin>
    </sensor>
  </gazebo>
  <!-- camera -->
  <gazebo reference="camera_link">
    <sensor name="camera1" type="camera">
      <update_rate>30.0</update_rate>
      <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>800</width>
          <height>800</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.  
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin filename="libgazebo_ros_camera.so" name="camera_controller">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>rrbot/camera1</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera_link</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>
  <material name="black">
    <color rgba="0.0 0.0 0.0 1.0"/>
  </material>
  <material name="blue">
    <color rgba="0.0 0.0 0.8 1.0"/>
  </material>
  <material name="green">
    <color rgba="0.0 0.8 0.0 1.0"/>
  </material>
  <material name="grey">
    <color rgba="0.2 0.2 0.2 1.0"/>
  </material>
  <material name="orange">
    <color rgba="1.0 0.423529411765 0.0392156862745 1.0"/>
  </material>
  <material name="brown">
    <color rgba="0.870588235294 0.811764705882 0.764705882353 1.0"/>
  </material>
  <material name="red">
    <color rgba="0.8 0.0 0.0 1.0"/>
  </material>
  <material name="white">
    <color rgba="1.0 1.0 1.0 1.0"/>
  </material>
  <!-- Used for fixing robot to Gazebo 'base_link' -->
  <link name="world"/>
  <link name="base_footprint">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0.01"/>
      <geometry>
        <box size="1.00 0.70 0.2"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0.01"/>
      <geometry>
        <box size="2.00 2.00 0.1"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0.02"/>
      <mass value="0.5"/>
      <inertia ixx="0.0107483333333" ixy="0.0" ixz="0.0" iyy="0.0107483333333" iyz="0.0" izz="0.000163333333333"/>
    </inertial>
  </link>
  <joint name="f_1" type="prismatic">
    <parent link="world"/>
    <origin rpy="0 0 0" xyz="0 0 0.05"/>
    <child link="base_footprint"/>
    <axis xyz="1 0 0"/>
    <limit effort="0.01" lower="-10" upper="10" velocity="1"/>
  </joint>
  <!-- link name="base_1">
   <visual>
      <origin xyz="1 0 1.51" rpy="0 0 0" />
      <geometry>
        <box size="0.1 2.1 3" />
      </geometry>
    </visual>
   <collision>
      <origin xyz="1 0 1.51" rpy="0 0 0" />
      <geometry>
        <box size="0.1 2.1 3" />
      </geometry>
    </collision>
  </link >

  <joint name="f_1" type="fixed">
    <parent link="base_footprint"/>
    <origin xyz="0 0 0.05" rpy="0 0 0"/>
    <child link="base_1"/>
  </joint-->
  <joint name="fixed" type="fixed">
    <parent link="base_footprint"/>
    <origin rpy="0 0 0" xyz="0 0 0.05"/>
    <child link="link1"/>
  </joint>
  <!-- Base Link -->
  <link name="link1">
    <collision>
      <origin rpy="0 0 0" xyz="0 0.07 0.4"/>
      <geometry>
        <box size="0.07 0.07 0.8"/>
      </geometry>
    </collision>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0.4"/>
      <geometry>
        <box size="0.07 0.07 0.8"/>
      </geometry>
      <material name="orange"/>
    </visual>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0.4"/>
      <mass value="0.2"/>
      <inertia ixx="0.0107483333333" ixy="0.0" ixz="0.0" iyy="0.0107483333333" iyz="0.0" izz="0.000163333333333"/>
    </inertial>
  </link>
  <joint name="joint1" type="revolute">
    <parent link="link1"/>
    <child link="link2"/>
    <origin rpy="0 0 0" xyz="0 0.07 0.75"/>
    <axis xyz="0 1 0"/>
    <dynamics damping="0.1"/>
    <limit effort="10000" lower="-1" upper="1" velocity="10000"/>
  </joint>
  <!-- Middle Link -->
  <link name="link2">
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0.25"/>
      <geometry>
        <box size="0.07 0.07 0.6"/>
      </geometry>
    </collision>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0.25"/>
      <geometry>
        <box size="0.07 0.07 0.6"/>
      </geometry>
      <material name="black"/>
    </visual>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0.25"/>
      <mass value="0.2"/>
      <inertia ixx="0.00608166666667" ixy="0.0" ixz="0.0" iyy="0.00608166666667" iyz="0.0" izz="0.000163333333333"/>
    </inertial>
  </link>
  <!--transmission name="tran1">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="joint1">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor1">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
      <mechanicalReduction>100</mechanicalReduction>
    </actuator>
  </transmission -->
  <plugin filename="libgazebo_ros_control.so" name="gazebo_ros_control">
    <robotNamespace>/rrbot</robotNamespace>
  </plugin>
  <gazebo>
    <plugin filename="libgazebo_ros_force_based_move.so" name="object_controller">
      <commandTopic>turtle1/cmd_vel</commandTopic>
      <odometryTopic>odom</odometryTopic>
      <odometryFrame>odom</odometryFrame>
      <odometryRate>2.0</odometryRate>
      <robotBaseFrame>base_footprint</robotBaseFrame>
      <x_velocity_p_gain>50000</x_velocity_p_gain>
      <y_velocity_p_gain>50000</y_velocity_p_gain>
      <yaw_velocity_p_gain>4</yaw_velocity_p_gain>
    </plugin>
  </gazebo>
</robot>

