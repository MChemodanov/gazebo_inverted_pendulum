<?xml version="1.0"?>
<!-- Revolute-Revolute Manipulator -->
<robot name="rrbot" xmlns:xacro="http://www.ros.org/wiki/xacro">

  <!-- Constants for robot dimensions -->
  <xacro:property name="PI" value="3.1415926535897931"/>
  <xacro:property name="mass" value="0.2" /> <!-- arbitrary value for mass -->
  <xacro:property name="width" value="0.07" /> <!-- Square dimensions (widthxwidth) of beams -->
  <xacro:property name="height1" value="0.8" /> <!-- Link 1 -->
  <xacro:property name="height2" value="0.6" /> <!-- Link 2 -->
  <xacro:property name="height3" value="1" /> <!-- Link 3 -->
  <xacro:property name="camera_link" value="0.05" /> <!-- Size of square 'camera' box -->
  <xacro:property name="axel_offset" value="0.05" /> <!-- Space btw top of beam and the each joint -->

  <!-- Import all Gazebo-customization elements, including Gazebo colors -->
  <xacro:include filename="$(find rrbot_description)/urdf/rrbot.gazebo" />
  <!-- Import Rviz colors -->
  <xacro:include filename="$(find rrbot_description)/urdf/materials.xacro" />

  <!-- Used for fixing robot to Gazebo 'base_link' -->
<link name="world"/>

 <link name="base_footprint">
   <visual>
      <origin xyz="0 0 0.01" rpy="0 0 0" />
      <geometry>
        <box size="1.00 0.70 0.2" />
      </geometry>
    </visual>
    <collision>
      <origin xyz="0 0 0.01" rpy="0 0 0" />
      <geometry>
        <box size="2.00 2.00 0.1" />
      </geometry>
    </collision>
    <inertial>
      <origin xyz="0 0 0.02" rpy="0 0 0"/>
      <mass value="0.5"/>
      <inertia
	  ixx="${mass / 12.0 * (width*width + height1*height1)}" ixy="0.0" ixz="0.0"
	  iyy="${mass / 12.0 * (height1*height1 + width*width)}" iyz="0.0"
	  izz="${mass / 12.0 * (width*width + width*width)}"/>
    </inertial>
  </link>

  <joint name="f_1" type="prismatic">
    <parent link="world"/>
    <origin xyz="0 0 0.05" rpy="0 0 0"/>
    <child link="base_footprint"/>
    <axis xyz="1 0 0"/>
    <limit velocity="1" effort="0.01" lower="-10" upper="10" />
  </joint>

 <!-- link name="base_1">
   <visual>
      <origin xyz="1 0 1.51" rpy="0 0 0" />
      <geometry>
        <box size="0.1 2.1 3" />
      </geometry>
    </visual>
   <collision>
      <origin xyz="1 0 1.51" rpy="0 0 0" />
      <geometry>
        <box size="0.1 2.1 3" />
      </geometry>
    </collision>
  </link >

  <joint name="f_1" type="fixed">
    <parent link="base_footprint"/>
    <origin xyz="0 0 0.05" rpy="0 0 0"/>
    <child link="base_1"/>
  </joint-->

  <joint name="fixed" type="fixed">
    <parent link="base_footprint"/>
    <origin xyz="0 0 0.05" rpy="0 0 0"/>
    <child link="link1"/>
  </joint>

  <!-- Base Link -->
  <link name="link1">
    <collision>
      <origin xyz="0 ${width} ${height1/2}" rpy="0 0 0"/>
      <geometry>
	<box size="${width} ${width} ${height1}"/>
      </geometry>
    </collision>

    <visual>
      <origin xyz="0 0 ${height1/2}" rpy="0 0 0"/>
      <geometry>
	<box size="${width} ${width} ${height1}"/>
      </geometry>
      <material name="orange"/>
    </visual>

    <inertial>
      <origin xyz="0 0 ${height1/2}" rpy="0 0 0"/>
      <mass value="${mass}"/>
      <inertia
	  ixx="${mass / 12.0 * (width*width + height1*height1)}" ixy="0.0" ixz="0.0"
	  iyy="${mass / 12.0 * (height1*height1 + width*width)}" iyz="0.0"
	  izz="${mass / 12.0 * (width*width + width*width)}"/>
    </inertial>
  </link>

  <joint name="joint1" type="revolute">
    <parent link="link1"/>
    <child link="link2"/>
    <origin xyz="0 ${width} ${height1 - axel_offset}" rpy="0 0 0"/>
    <axis xyz="0 1 0"/>
    <dynamics damping="0.1"/>
    <limit velocity="10000" effort="10000" lower="${-PI}" upper="${PI}" />
  </joint>

  <!-- Middle Link -->
  <link name="link2">
    <collision>
      <origin xyz="0 0 ${height2/2 - axel_offset}" rpy="0 0 0"/>
      <geometry>
	<box size="${width} ${width} ${height2}"/>
      </geometry>
    </collision>

    <visual>
      <origin xyz="0 0 ${height2/2 - axel_offset}" rpy="0 0 0"/>
      <geometry>
	<box size="${width} ${width} ${height2}"/>
      </geometry>
      <material name="black"/>
    </visual>

    <inertial>
      <origin xyz="0 0 ${height2/2 - axel_offset}" rpy="0 0 0"/>
      <mass value="${mass}"/>
      <inertia
	  ixx="${mass / 12.0 * (width*width + height2*height2)}" ixy="0.0" ixz="0.0"
	  iyy="${mass / 12.0 * (height2*height2 + width*width)}" iyz="0.0"
	  izz="${mass / 12.0 * (width*width + width*width)}"/>
    </inertial>
  </link>

  <transmission name="tran1">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="joint1">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor1">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
      <mechanicalReduction>100</mechanicalReduction>
    </actuator>
  </transmission>

  <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
    <robotNamespace>/rrbot</robotNamespace>
  </plugin> 

  <gazebo>
    <plugin name="object_controller" filename="libgazebo_ros_force_based_move.so">
      <commandTopic>turtle1/cmd_vel</commandTopic>
      <odometryTopic>odom</odometryTopic>
      <odometryFrame>odom</odometryFrame>
      <odometryRate>2.0</odometryRate>
      <robotBaseFrame>base_footprint</robotBaseFrame>
      <x_velocity_p_gain>50000</x_velocity_p_gain>
      <y_velocity_p_gain>50000</y_velocity_p_gain>
      <yaw_velocity_p_gain>4</yaw_velocity_p_gain>
    </plugin>
  </gazebo>
</robot>
